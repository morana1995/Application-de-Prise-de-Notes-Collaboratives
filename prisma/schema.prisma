datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
 
}
model Note {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  isFavorite  Boolean   @default(false)
  isPublic    Boolean   @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])

  categoryId  String?   @db.ObjectId
  category    Category? @relation(fields: [categoryId], references: [id])

  groupId     String?   @db.ObjectId
  group       Group?    @relation(fields: [groupId], references: [id])

  collaborators Collaboration[] @relation("NoteCollaborators")

  @@index([userId])
  @@index([createdAt])
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  image      String?   
  imageData Bytes? 
  bio       String?    
  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  notes Note[]

  categories Category[]
  ownedGroups Group[]     @relation("OwnedGroups")
  groupMembers GroupMember[]
  
  collaborations Collaboration[] @relation("CollaboratorsOnNote")

  @@index([role])
  @@index([createdAt])
}

model Category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  color     String
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  notes     Note[]

  @@index([userId])
  @@index([name])
}

model Group {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  ownerId   String   @db.ObjectId
  owner     User     @relation("OwnedGroups", fields: [ownerId], references: [id])
  notes     Note[]
  groupMembers GroupMember[]

  @@index([ownerId])
  @@index([name])
}

model GroupMember {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  group   Group   @relation(fields: [groupId], references: [id])
  groupId String  @db.ObjectId
  user    User    @relation(fields: [userId], references: [id])
  userId  String  @db.ObjectId

  @@index([groupId])
  @@index([userId])
}

model Collaboration {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  noteId  String   @db.ObjectId
  userId  String   @db.ObjectId

  note    Note     @relation(fields: [noteId], references: [id], name: "NoteCollaborators")
  user    User     @relation(fields: [userId], references: [id], name: "CollaboratorsOnNote")

  @@index([noteId])
  @@index([userId])
}


